import java.sql.*;
import java.util.List;

import repositories.IRepository;
import repositories.IRepositoryCatalog;
import repositories.impl.RepositoryCatalog;
import unitofwork.IUnitOfWork;
import unitofwork.UnitOfWork;
import domain.Game;
import domain.League;
import domain.Match;
import domain.Team;


public class Test {

	public static void main(String[] args) {

		
		String url="jdbc:hsqldb:hsql://localhost/workdb";
		
		Match match = new Match();
		match.setDate(new Date(System.currentTimeMillis()));
		
		League league = new League();
		league.setName("Clanbase");
		
		Game game = new Game();
		game.setName("Counter-Strike");
		
		Team team = new Team();
		team.setName("PJWSTK");
		team.setNationality("Polish");
		team.setGame(game);
		
		try {
			
			Connection connection = DriverManager.getConnection(url);
			IUnitOfWork uow = new UnitOfWork(connection);
			
			/*
			String createTableSql = 
					"CREATE TABLE league("
					+ "id int GENERATED BY DEFAULT AS IDENTITY,"
					+ "name VARCHAR(20),"
					+ ")";
			Statement createTable = connection.createStatement();
			createTable.executeUpdate(createTableSql);
			
			
			
			String createTableSql = 
					"CREATE TABLE team("
					+ "id int GENERATED BY DEFAULT AS IDENTITY,"
					+ "name VARCHAR(20),"
					+ "nationality VARCHAR(20)"
					+ ")";
			Statement createTable = connection.createStatement();
			createTable.executeUpdate(createTableSql);
			
		
		
		
		String createTableSql = 
				"CREATE TABLE game("
				+ "id int GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "code VARCHAR(20)"
				+ ")";
		Statement createTable = connection.createStatement();
		createTable.executeUpdate(createTableSql);
		
		
		
		String createTableSql = 
				"CREATE TABLE match("
				+ "id int GENERATED BY DEFAULT AS IDENTITY,"
				+ "date Smalldatetime(20),"
				+ "score VARCHAR(20)"
				+ ")";
		Statement createTable = connection.createStatement();
		createTable.executeUpdate(createTableSql);
		*/
			
			IRepositoryCatalog catalog = new RepositoryCatalog(connection, uow);
			
			catalog.getGames().save(game);
			catalog.getTeams().save(team);
			catalog.getMatches().save(match);
			
			List<Game> gamesFromDb = catalog.getGames().getAll();
			
			for(Game gameFromDb : gamesFromDb)
				System.out.println(gameFromDb.getId()+" "+gameFromDb.getName()+" "+gameFromDb.getCode());
		} catch (SQLException e) {
			e.printStackTrace();
		}
		System.out.println("Koniec");
		
	}
}
